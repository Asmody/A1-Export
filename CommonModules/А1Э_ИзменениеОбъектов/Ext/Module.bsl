#Область README
//При разработке на 1С часто встречаются связанные поля у объекта (количество * цена = сумма). 
//Обычно это решается с помощью обработчиков изменения на форме. Однако у этого подхода есть значительные недостатки:
//1. При увеличении сложности объекта сложность обработчиков возрастает катастрофически (см. типовые УТ/КА/ERP).
//2. Этот подход не согласуется с идеей модульности.
//3. Этот подход блокирует автоматизацию и служебные операции. То, что для пользователя кажется
//"Ну поменяй мне цену в этих документах, тебе же одна строка кода!", для программиста оказывается сложной и нетривиальной задачей по изменению всех связанных полей.
//Текущий модуль предназначен для решения этих проблем. Он экспортирует функцию ИзменитьСтрокуТЧ, которая изменяет ячейку с учетом всех этих обработчиков. 
//Сами обработчики подключаются через А1Э_Механизмы, используя событие "А1Э_ПриИзмененииСтрокиТЧ".
//Ожидается, что обработчики могут быть запущены как в клиентском, так и в серверном контексте.
//В связи с этим рекомендуется избегать (при возможности) использования серверных вызовов в обработчиках. 
//Результаты серверных вызовов рекомендуется кэшировать, используя событие "А1Э_ПриПолученииКэшаИзменения".
//Ожидается, что кэш между несколькими операциями над одним объектом неизменен.
//
#КонецОбласти 

#Область ПрограммныйИнтерфейс

// Изменяет значение в строке табличной части с учетом обработчиков изменения.
//
// Параметры:
//  ФормаИлиОбъект	 - ФормаКлиентскогоПриложения,<ТипОбъекта>Объект - 
//  ИмяТЧ			 - Строка - 
//  СтрокаТЧ		 - ДанныеФормыЭлементКоллекции,СтрокаТабличнойЧасти, Число - число будет воспринято как индекс строки. 
//  ИмяРеквизита	 - Строка - 
//  НовоеЗначение	 - Произвольный - 
//  Кэш				 - Структура,Неопределено - если Неопределено, кэш будет создан в процессе вызова. 
// 
// Возвращаемое значение:
//  Булево,Неопределено - истина если выполнение было прервано.
//
Функция ИзменитьСтрокуТЧ(ФормаИлиОбъект, ИмяТЧ, Знач СтрокаТЧ, ИмяРеквизита, НовоеЗначение, Кэш = Неопределено) Экспорт
	Если ТипЗнч(ФормаИлиОбъект) = А1Э_СтандартныеТипы.ФормаКлиентскогоПриложения() Тогда
		Форма = ФормаИлиОбъект;
		Объект = Форма.Объект;
	Иначе
		Форма = Неопределено;
		Объект = ФормаИлиОбъект;		
	КонецЕсли;
	#Если НЕ Клиент Тогда
		АктуализироватьКэшПриНеобходимости(ФормаИлиОбъект, Кэш);
	#Иначе
		Если Кэш = Неопределено Тогда
			А1Э_Служебный.СлужебноеИсключение("Актуализация кэша изменения объекта на клиенте невозможна!");
		КонецЕсли;
	#КонецЕсли
	 	 
	Если ТипЗнч(СтрокаТЧ) = Тип("Число") Тогда
		СтрокаТЧ = Объект[ИмяТЧ][СтрокаТЧ];
	КонецЕсли;
	
	Снимок = Неопределено;
	#Если НЕ Клиент Тогда
		Если ТипЗнч(Объект) <> Тип("ДанныеФормыСтруктура") Тогда //Используем кэширование через структуру с метаданными
			Снимок = Новый Структура;
			МетаданныеТЧ = Объект.Метаданные().ТабличныеЧасти[ИмяТЧ];
			Для Каждого Реквизит Из МетаданныеТЧ.Реквизиты Цикл
				Снимок.Вставить(Реквизит.Имя, СтрокаТЧ[Реквизит.Имя]);
			КонецЦикла;
		КонецЕсли;
	#КонецЕсли
	
	Если Снимок = Неопределено Тогда 
		Снимок = Объект[ИмяТЧ].Добавить(); //Проще всего исходную строку хранить в новой строке таблицы.
		ЗаполнитьЗначенияСвойств(Снимок, СтрокаТЧ);
		Объект[ИмяТЧ].Удалить(Снимок); //Сразу удаляем строку - она исчезает из таблицы, но продолжает хранить данные.
	КонецЕсли;
	
	Попытка
		ИзменитьСтрокуТЧБезОбвязки(Объект, ИмяТЧ, СтрокаТЧ, ИмяРеквизита, НовоеЗначение, Кэш); 
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		УстановитьПрерываниеВыполнения(Кэш);
	КонецПопытки;
	
	Если Кэш.ПрерываниеВыполнения = Истина Тогда //Изменение завершилось неудачно, откатываем.
		ПрерываниеВыполнения = Истина;
		ЗаполнитьЗначенияСвойств(СтрокаТЧ, Снимок);
	КонецЕсли;
	Кэш.ПрерываниеВыполнения = Неопределено;
	
	Если ОписаниеОшибки <> Неопределено Тогда
		А1Э_Служебный.СлужебноеИсключение("Ошибка при изменении реквизита - " + ОписаниеОшибки);
	КонецЕсли;
	
	Возврат ПрерываниеВыполнения;
КонецФункции 

// Изменяет значение в строке тч без автоматического получения кэша и отката изменений. Предназначено для
// рекурсивного использования в обработчиках и 
//
// Параметры:
//  Объект			 - ДанныеФормыСтруктура, - 
//  ИмяТЧ			 - 	 - 
//  СтрокаТЧ		 - 	 - 
//  ИмяРеквизита	 - 	 - 
//  НовоеЗначение	 - 	 - 
//  Кэш				 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ИзменитьСтрокуТЧБезОбвязки(Объект, ИмяТЧ, СтрокаТЧ, ИмяРеквизита, НовоеЗначение, Кэш) Экспорт
	СтароеЗначение = СтрокаТЧ[ИмяРеквизита];
	СтрокаТЧ[ИмяРеквизита] = НовоеЗначение;
	
	Для Сч = 0 По Кэш.ФункцииОбработчика.Количество() - 1 Цикл
		ФункцияОбработчика = Кэш.ФункцииОбработчика[Сч];
		А1Э_Общее.РезультатФункции(ФункцияОбработчика.ИмяФункции, Объект, ИмяТЧ, СтрокаТЧ, ИмяРеквизита, СтароеЗначение, Кэш);
		Если Кэш.ПрерываниеВыполнения = Истина Тогда Возврат Неопределено; КонецЕсли;
	КонецЦикла;

КонецФункции 

// Вызывает процедуру изменения ячейки в строке табличной части из формы.
//                                                 
// Параметры:
//  Форма			 - ФормаКлиентскогоПриложения - 
//  ИмяТЧ			 - Строка - 
//  СтрокаТЧ		 - ДанныеФормыЭлементКоллекции,Число - 
//  ИмяРеквизита	 - Строка - 
//  НовоеЗначение	 - Произвольный - 
// 
// Возвращаемое значение:
//   - 
//
Функция ФормаИзменитьСтрокуТЧ(Форма, ИмяТЧ, Знач СтрокаТЧ, ИмяРеквизита, НовоеЗначение) Экспорт 
	Возврат ИзменитьСтрокуТЧ(Форма, ИмяТЧ, СтрокаТЧ, ИмяРеквизита, НовоеЗначение, Форма.А1Э_ИзменениеОбъектов__Кэш);
КонецФункции

Функция ПрикладнойКэш(Форма) Экспорт
	Возврат Форма.А1Э_ИзменениеОбъектов__Кэш.ПрикладнойКэш;
КонецФункции

Функция УстановитьПрерываниеВыполнения(Кэш) Экспорт
	Кэш.ПрерываниеВыполнения = Истина; 
КонецФункции

#КонецОбласти 

#Область Механизм

Функция НастройкиМеханизма() Экспорт
	Настройки = А1Э_Механизмы.НовыйНастройкиМеханизма();
	
	Настройки.Обработчики.Вставить("ФормаЭлементаПриСозданииНаСервере", Истина);
	
	Настройки.ПорядокВыполнения = 10000;
	
	Возврат Настройки;
КонецФункции

#Если НЕ Клиент Тогда
	
	Функция ФормаЭлементаПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт 
		МетаданныеОбъекта = Форма.Объект.Ссылка.Метаданные();
		МеханизмПрименен = Ложь;
		Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
			ТаблицаФормы = Форма.Элементы.Найти(ТабличнаяЧасть.Имя); 
			Если ТаблицаФормы = Неопределено Тогда Продолжить; КонецЕсли;
			Если ТипЗнч(ТаблицаФормы) <> Тип("ТаблицаФормы") Тогда Продолжить; КонецЕсли;
			МеханизмПрименен = Истина;
			Для Каждого Элемент Из ТаблицаФормы.ПодчиненныеЭлементы Цикл
				Если Элемент.Вид = ВидПоляФормы.ПолеНадписи Тогда Продолжить; КонецЕсли;
				Если Элемент.Вид <> ВидПоляФормы.ПолеФлажка Тогда
					А1Э_УниверсальнаяФорма.ДобавитьОбработчикЭлементаФормы(Форма, Элемент, "ОкончаниеВводаТекста", "А1Э_ИзменениеОбъектов.ЯчейкаОкончаниеВводаТекста");
					А1Э_УниверсальнаяФорма.ДобавитьОбработчикЭлементаФормы(Форма, Элемент, "ОбработкаВыбора", "А1Э_ИзменениеОбъектов.ЯчейкаОбработкаВыбора");
				КонецЕсли;
				А1Э_УниверсальнаяФорма.ДобавитьОбработчикЭлементаФормы(Форма, Элемент, "ПриИзменении", "А1Э_ИзменениеОбъектов.ЯчейкаПриИзменении");
			КонецЦикла;
		КонецЦикла;
		МассивОписаний = Новый Массив;
		А1Э_Формы.ДобавитьОписаниеРеквизита(МассивОписаний, "А1Э_ИзменениеОбъектов__ЗначениеЯчейки", "");
		А1Э_Формы.ДобавитьОписаниеРеквизита(МассивОписаний, "А1Э_ИзменениеОбъектов__Кэш", "", , ,
		А1Э_Структуры.Создать(
		"ЗначениеРеквизита", Кэш(Форма)
		));
		А1Э_Формы.ДобавитьРеквизитыИЭлементы(Форма, МассивОписаний);
	КонецФункции
	
#КонецЕсли
#Если Клиент Тогда
	
	Функция ЯчейкаПриИзменении(Форма, Элемент) Экспорт
		Таблица = А1Э_Формы.ТаблицаЭлемента(Форма, Элемент);
		ТекущиеДанные = Таблица.ТекущиеДанные;
		ИмяРеквизита = ИмяРеквизита(Таблица, Элемент); 
		Прерывание = ИзменитьСтрокуТЧ(Форма, Таблица.Имя, ТекущиеДанные, ИмяРеквизита, ТекущиеДанные[ИмяРеквизита], Форма.А1Э_ИзменениеОбъектов__Кэш);
		Если Прерывание = Истина Тогда //Так как реквизит уже был изменен в начале обработчика, возвращаем его назад принудительно.
			Если Элемент.Вид = ВидПоляФормы.ПолеФлажка Тогда //У флажков не сохраняется исходное значение.
				Если ТипЗнч(ТекущиеДанные[ИмяРеквизита]) = Тип("Булево") Тогда
					ТекущиеДанные[ИмяРеквизита] = НЕ ТекущиеДанные[ИмяРеквизита];
				Иначе
					А1Э_Служебный.СлужебноеИсключение("Механизм А1Э_ИзменениеОбъектов не поддерживает флажки не булевых типов!");
				КонецЕсли;
			КонецЕсли;
			Таблица.ТекущиеДанные[ИмяРеквизита] = Форма.А1Э_ИзменениеОбъектов__ЗначениеЯчейки;
		КонецЕсли;
		
	КонецФункции 
	
	Функция ЯчейкаОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
		УстановитьТекущееЗначениеЯчейки(Форма, Элемент);
	КонецФункции
	
	Функция ЯчейкаОкончаниеВводаТекста(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка) Экспорт 
		УстановитьТекущееЗначениеЯчейки(Форма, Элемент);
	КонецФункции
	
	Функция УстановитьТекущееЗначениеЯчейки(Форма, Элемент)
		Таблица = А1Э_Формы.ТаблицаЭлемента(Форма, Элемент);
		Форма.А1Э_ИзменениеОбъектов__ЗначениеЯчейки = Таблица.ТекущиеДанные[ИмяРеквизита(Таблица, Элемент)];
	КонецФункции 
	
	Функция ИмяРеквизита(Таблица, Элемент) 
		Возврат А1Э_Строки.После(Элемент.Имя, Таблица.Имя);
	КонецФункции 
#КонецЕсли

#Если НЕ Клиент Тогда
	
	Функция АктуализироватьКэшПриНеобходимости(ФормаИлиОбъект, Кэш) 
		Если Кэш <> Неопределено И А1Э_Формы.Ссылка(ФормаИлиОбъект) = Кэш.Ссылка Тогда Возврат Неопределено; КонецЕсли;
		
		Кэш = Кэш(ФормаИлиОбъект); 
	КонецФункции
	
	Функция Кэш(ФормаИлиОбъект)  
		ИмяМетаданных = А1Э_Механизмы.ИмяМетаданныхОбъекта(ФормаИлиОбъект);
		ФункцииОбработчика = А1Э_Механизмы.ФункцииОбработчикаОбъекта("А1Э_ПриИзмененииСтрокиТЧ", ИмяМетаданных);
		ПрикладнойКэш = Новый Структура;
		А1Э_Механизмы.ВыполнитьМеханизмыОбработчикаОбъекта("А1Э_ПриПолученииКэшаИзменения", ФормаИлиОбъект, ПрикладнойКэш);
		
		Возврат А1Э_Структуры.Создать(
		"Класс", "А1Э_ИзменениеОбъектов_Кэш",
		"ИмяМетаданных", ИмяМетаданных,
		"Ссылка", А1Э_Формы.Ссылка(ФормаИлиОбъект),
		"ФункцииОбработчика", ФункцииОбработчика,
		"ПрикладнойКэш", ПрикладнойКэш,
		"ПрерываниеВыполнения", Неопределено,
		); 
	КонецФункции 
	
#КонецЕсли

#КонецОбласти 
