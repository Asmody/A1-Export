Функция Существует(Имя, ПовтИсп = Истина) Экспорт
	Если ПовтИсп Тогда А1Э_ПовторноеИспользование.РезультатФункцииСервер("А1Э_Расширения.Существует", Имя, Ложь); КонецЕсли;
	
	#Если Клиент Тогда
		А1Э_Служебный.СлужебноеИсключение("Выполнение на клиенте возможно только в режиме повторного использования!");
	#Иначе
		Возврат РасширенияКонфигурации.Получить(А1Э_Структуры.Создать(
		"Имя", Имя,
		)).Количество() > 0;
	#КонецЕсли
КонецФункции

#Если НЕ Клиент Тогда
	
	Функция Получить(Имя) Экспорт
		Массив = РасширенияКонфигурации.Получить(А1Э_Структуры.Создать(
		"Имя", Имя,
		));
		Если Массив.Количество() = 0 Тогда Возврат Неопределено; КонецЕсли;
		Возврат Массив[0];
	КонецФункции
	
#КонецЕсли

#Область ОбработкаXML
//Недоделано. Планируется, что эта система позволит генерировать код расширений на ходу.

Функция ВыполнитьГенерациюКода(КаталогРасширения) Экспорт
	ПутьККорневомуФайлу = А1Э_Файлы.СложитьПути(КаталогРасширения, "Configuration.xml");
	Если НЕ А1Э_Файлы.ФайлСуществует(ПутьККорневомуФайлу) Тогда
		ВызватьИсключение "В каталоге расширения отсутствует расширение (файл Configuration.xml)";
	КонецЕсли;
	КорневойДокумент = А1Э_Сериализация.ДОМ_ИзФайлаХМЛ(ПутьККорневомуФайлу);
	Префикс = КорневойДокумент.ПолучитьЭлементыПоИмени("NamePrefix")[0].ТекстовоеСодержимое;
	ПутьКНастройкамГенерацииКода = А1Э_Файлы.СложитьПути(КаталогРасширения, "CommonTemplates", Префикс + "А1НастройкиГенерацииКода", "Ext\Template.txt");
	Если НЕ А1Э_Файлы.ФайлСуществует(ПутьКНастройкамГенерацииКода) Тогда
		Сообщить("В файлах расширения не найдены настройки генерации кода (общий макет вида ТекстовыйДокумент с именем <Префикс>А1НастройкиГенерацииКода");
		Возврат Неопределено;
	КонецЕсли;
	НастройкиГенерацииКода = А1Э_Сериализация.ЗначениеЖСОН(А1Э_Строки.ИзФайлаСинхронно(ПутьКНастройкамГенерацииКода));
	Если А1Э_Общее.Свойство(НастройкиГенерацииКода, "А1Э_ЗаимствоватьПолностью") Тогда
		ДобавитьПолныеЗаимствования(КаталогРасширения, НастройкиГенерацииКода.А1Э_ЗаимствоватьПолностью); 
	КонецЕсли;
КонецФункции

Функция ДобавитьПолныеЗаимствования(Каталог, Настройки)
	Если ТипЗнч(Настройки) <> Тип("Массив") Тогда
		Сообщить("Настройки действия А1Э_ЗаимствоватьПолностью должны быть массивом!");
		Возврат Неопределено;
	КонецЕсли;
	
	Для Каждого ИмяМетаданных Из Настройки Цикл
		ОбъектМетаданных = А1Э_Метаданные.ОбъектМетаданныхБезопасно(ИмяМетаданных);
		Если ОбъектМетаданных = Неопределено Тогда
			Сообщить("Объект метаданных " + ОбъектМетаданных.ПолноеИмя() + " не найден в конфигурации! Его заимствование не выполнено!");
			Продолжить;
		КонецЕсли;
		
		ПутьКОписаниюОбъектаМетаданных = А1Э_ГенерацияКода.ПутьКОписаниюОбъектаМетаданных(Каталог, ОбъектМетаданных); 
		//ТУДУ: сделать добавление объектов, если отсутствуют.
		Если НЕ А1Э_Файлы.ФайлСуществует(ПутьКОписаниюОбъектаМетаданных) Тогда
			Сообщить("Объект метаданных " + ОбъектМетаданных.ПолноеИмя() + " не найден в расширении! Для автоматического заимствования добавьте его вручную!");
			Продолжить;
		КонецЕсли;
		ДОМ = А1Э_Сериализация.ДОМ_ИзФайлаХМЛ(ПутьКОписаниюОбъектаМетаданных);
		//КонтейнерПодчиненных = 
		Для Каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
			//Существующий = ДОМ
		КонецЦикла;
		
	КонецЦикла;		
КонецФункции

#КонецОбласти 