// Выводит область макета в табличный документ. Если указан ИсточникДанных, производит заполнение параметров.
// Если указаны Трансформации, производит трансформации параметров перед заполнением.
//
// Параметры:
//  ТабличныйДокумент	 - ТабличныйДокумент - 
//  Макет				 - ТабличныйДокумент - 
//  ИмяОбласти			 - Строка - 
//  ИсточникДанных		 - 	 - тип данных должен поддерживать метод "ЗаполнитьЗначенияСвойств" или иметь значение Неопределено.
//  Трансформации		 - Структура,Неопределено - ключи структуры это имена полей источника, которые должны быть трансформированы.
//		Значения определяют выполняемые трансформации. Пока что поддерживается трансформация "Деньги" (Формат ЧДЦ=2) .
//								
// 
// Возвращаемое значение:
//   - 
//
Функция ВывестиОбласть(ТабличныйДокумент, Макет, ИмяОбласти, ИсточникДанных = Неопределено, Трансформации = Неопределено) Экспорт
	Область = Макет.ПолучитьОбласть(ИмяОбласти);
	Если ИсточникДанных <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Область.Параметры, ИсточникДанных);
		Если Трансформации <> Неопределено Тогда
			ТрансформированныеЗначения = А1Э_Структуры.Скопировать(Трансформации);
			Для Каждого Пара Из Трансформации Цикл
				Если А1Э_Общее.Свойство(ИсточникДанных, Пара.Ключ) Тогда
					ТрансформированныеЗначения[Пара.Ключ] = ТрансформироватьЗначение(ИсточникДанных[Пара.Ключ], Пара.Значение);
				Иначе
					ТрансформированныеЗначения.Удалить(Пара.Ключ);
				КонецЕсли;
			КонецЦикла;
			ЗаполнитьЗначенияСвойств(Область.Параметры, ТрансформированныеЗначения);
		КонецЕсли;		
	КонецЕсли;
	ТабличныйДокумент.Вывести(Область);	
КонецФункции

Функция ТрансформироватьЗначение(Значение, Знач Трансформации) 
	Трансформации = А1Э_Массивы.Массив(Трансформации);
	Если Трансформации.Количество() = 0 Тогда Возврат Значение; КонецЕсли;
	Результат = Значение;
	Для Каждого Трансформация Из Трансформации Цикл
		Если Трансформация = "Деньги" Тогда
			Результат = Формат(Результат, "ЧДЦ=2; ЧН=0,00"); 
		ИначеЕсли Трансформация = "ДеньМесяцГод" Тогда
			Результат = А1Э_Даты.ДеньМесяцГод(Результат);
		Иначе
			А1Э_Служебный.СлужебноеИсключение("Неверный вид трансформации!");
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ВывестиРазделитель(ТабличныйДокумент, ЭтоПервый = Ложь) Экспорт
	Если ЭтоПервый = Истина Тогда
		ЭтоПервый = Ложь;
	Иначе
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
КонецФункции

Функция Просмотреть(ТабличныйДокумент, Знач НомерПервойСтроки, Знач НомерПервойКолонки, Знач НомерПоследнейСтроки = Неопределено, Знач НомерПоследнейКолонки = Неопределено) Экспорт 
	Если НомерПоследнейСтроки = Неопределено Тогда
		//Считаем, что мы идем с 1 по указанные строки/колонки.
		НомерПоследнейСтроки = НомерПервойСтроки;
		НомерПоследнейКолонки = НомерПервойКолонки;
		НомерПервойСтроки = 1;
		НомерПервойКолонки = 1;
	КонецЕсли;
	Результат = Новый Массив;
	Для СчСтрок = НомерПервойСтроки По НомерПоследнейСтроки Цикл
		Строка = Новый Структура;
		Результат.Добавить(Строка);
		Строка.Вставить("НомерСтроки", СчСтрок);
		Для СчКолонок = НомерПервойКолонки По НомерПоследнейКолонки Цикл
			Строка.Вставить("Кол" + А1Э_Строки.ВСтроку(СчКолонок), ТабличныйДокумент.Область(СчСтрок, СчКолонок).Текст);
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

